http://blog.csdn.net/csywwx2008/article/details/17137097

1、ASCII码
这是美国在19世纪60年代的时候为了建立英文字符和二进制的关系时制定的编码规范，它能表示128个字符，其中包括英文字符、阿拉伯数字、
西文字符以及32个控制字符。它用一个字节来表示具体的字符，但它只用后7位来表示字符（2^7=128），最前面的一位统一规定为0。


2.扩展的ASCII码
原本的ASCII码对于英文语言的国家是够用了，但是欧洲国家的一些语言会有拼音，这时7个字节就不够用了。因此一些欧洲国家就决定，利用字
节中闲置的最高位编入新的符号。比如，法语中的é的编码为130（二进制10000010）。这样一来，这些欧洲国家使 用的编码体系，可以表示最多
256个符号。但这时问题也出现了：不同的国家有不同的字母，因此，哪怕它们都使用256个符号的编码方式，代表的字母却不一样。比如，130在
法语编码 中代表了é，在希伯来语编码中却代表了字母Gimel (?)，在俄语编码中又会代表另一个符号。但是不管怎样，所有这些编码方式中，0―
127表示的符号是一样的，不一样的只是128―255的这一段。这个问题就直接促使了Unicode编码的产生。


3.Unicode符号集
Unicode就是这样一种编码：它包含了世界上所有的符号，并且每一个符号都是独一无二的。很多人都说Unicode编码，但其实Unicode是一个符号集
（世界上所有符号的符号集），而不是一种新的编码方式。


4.UTF-8
互联网的普及，强烈要求出现一种统一的编码方式。UTF-8就是在互联网上使用最广的一种unicode的实现方式。其他实现方式还包括UTF-16和UTF-32，
不过在互联网上基本不用。重复一遍，这里的关系是，UTF-8是Unicode的实现方式之一。



5.GBK/GB2312/GB18030
GBK和GB2312都是针对简体字的编码，只是GB2312只支持六千多个汉字的编码，而GBK支持1万多个汉字编码。而GB18030是用于繁体字的编码。汉字存储
时都使用两个字节来储存。