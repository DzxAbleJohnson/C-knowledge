预编译过程主要处理那些源代码文件中以“#“开始的预编译指令。比如"#include"、“#define”等，主要处理规则如下：
- 将所有的#define删除，并且展开所有的宏定义；
- 处理所有条件预编译指令，比如“#if”、“#ifdef”、“#elif”、“#else”、“#endif”。
- 处理“#include” 预编译指令，将被包含的文件插入该编译指令的位置。注意：这个过程是递归进行的，也就是说被包含的文件可能还
包含其他文件。
- 删除所有注释
- 添加行号和文件名标识，比如#2 “hello.c” 2，以便于编译时编译器产生的调试用的行号信息及用于编译产生的编译错误或警告时能够显示
行号。
- 保留所有的#pragma 编译器指令，因为编译器需要使用它们；

经过预编译后的.i文件不包含任何宏定义，因为所有宏已经展开，并且包含的文件也已经被插入.i文件中。所以当我们无法判断
宏定义是否正确或头文件是否正确时，也可以查看预编译后的文件来确定问题。